{"conn": "snowflake_production", "explore": ["explore: sf__opportunities {", "  persist_with: snowflake_sfdc_oppty_data", "  from: sf__opportunities_extended", "  # Snowflake-specific PDT referenced via include at top", "  view_label: \"Opportunities\"", "  label: \"Opportunities\"", "  sql_always_where: NOT ${sf__opportunities.is_deleted} ;;", "", "  join: sf__accounts {", "    view_label: \"Accounts\"", "    sql_table_name: SEGMENT.SALESFORCE.ACCOUNTS ;;", "    sql_on: ${sf__opportunities.account_id} = ${sf__accounts.id} ;;", "    relationship: many_to_one", "  }", "", "  join: account_owners {", "    from: sf__users", "    sql_table_name: SEGMENT.SALESFORCE.USERS ;;", "    sql_on: ${sf__accounts.owner_id} = ${account_owners.id} ;;", "    relationship: many_to_one", "  }", "", "  join: tam {", "    from: sf__users", "    sql_table_name: SEGMENT.SALESFORCE.USERS ;;", "    sql_on: ${sf__accounts.tam} = ${tam.id} ;;", "    relationship: many_to_one", "  }", "", "  join: opportunity_contacts {", "    from: sf__opportunity_contact_role", "    sql_table_name: SEGMENT.SALESFORCE.OPPORTUNITY_CONTACT_ROLE ;;", "    sql_on: ${opportunity_contacts.opportunity_id} = ${sf__opportunities.id} ;;", "    relationship: many_to_many", "  }", "", "  join: contacts {", "    from: sf__contacts", "    sql_table_name: SEGMENT.SALESFORCE.CONTACTS ;;", "    sql_on: ${contacts.id} = ${opportunity_contacts.contact_id} ;;", "    relationship: one_to_many", "  }", "", "  join: campaign_members {", "    from:  sf__campaign_members", "    sql_table_name: SEGMENT.SALESFORCE.CAMPAIGN_MEMBERS ;;", "    sql_on: ${contacts.id} = ${campaign_members.contact_id} ;;", "    relationship: one_to_many", "  }", "", "  join: campaigns {", "    from:  sf__campaigns", "    sql_table_name: SEGMENT.SALESFORCE.CAMPAIGNS ;;", "    sql_on: ${campaign_members.campaign_id} = ${campaigns.id} ;;", "    relationship: many_to_one", "  }", "", "  join: opportunity_owners {", "    from: sf__users", "    sql_table_name: SEGMENT.SALESFORCE.USERS ;;", "    sql_on: ${sf__opportunities.owner_id} = ${opportunity_owners.id} ;;", "    relationship: many_to_one", "  }", "", "  join: opportunity_products {", "    from: sf__opportunity_products_extended", "    sql_on: ${sf__opportunities.id} = ${opportunity_products.opportunity_id} ;;", "    relationship: one_to_many", "  }", "", "  join: sf__deal_registrations {", "    view_label: \"Deal Registration\"", "    sql_table_name: SEGMENT.SALESFORCE.DEAL_REGISTRATIONS ;;", "    sql_on: ${sf__opportunities.id} = ${sf__deal_registrations.opportunity_c} ;;", "    relationship: one_to_one", "  }", "", "  join: opportunity_primary_campaign {", "    view_label: \"Primary Campaign\"", "    from:  sf__campaigns", "    sql_table_name: SEGMENT.SALESFORCE.CAMPAIGNS ;;", "    sql_on: ${sf__opportunities.campaign_id} = ${opportunity_primary_campaign.id} ;;", "    relationship: many_to_one", "  }", "", "  #join: finance_revenue_forecast {", "  #  view_label: \"Bookings Forecast\"", "  #  sql_table_name: PRODUCTION.FINANCE.REVENUE_FORECAST ;;", "  #  sql_on: ${finance_revenue_forecast.forecast_month} = ${sf__opportunities.close_month} ;;", "  #  relationship: many_to_one", "  #}", "  join: cloud_revenue {", "    from: stripe_charges", "    sql_table_name: SEGMENT.STRIPE.CHARGES ;;", "    sql_on: ${cloud_revenue.created_month} = ${sf__opportunities.close_month} ;;", "    relationship: many_to_many", "  }", "  #join: docker_users {", "  #  from: reghub_dockeruser", "  #  sql_on: ${docker_users.domain_name} = ${sf__accounts.domain} ;;", "  #  relationship: many_to_one", "  #}", "  #join: ucp_licenses {", "  #  from: ucp_licensing", "  #  sql_on: ${ucp_licenses.hub_uuid} = replace(${docker_users.uuid}, '-','') ;;", "  #  required_joins: [docker_users]", "  #  relationship: many_to_one", "  #}", "  #join: ucp_usage {", "  #  from: ucp_mixpanel", "  #  sql_on: ${ucp_usage.license_key} = ${ucp_licenses.license_key} ;;", "  #  required_joins: [ucp_licenses]", "  #  relationship: many_to_one", "  #}", "  join: sf__leads {", "    view_label: \"Converted Leads\"", "    sql_table_name: SEGMENT.SALESFORCE.LEADS ;;", "    sql_on: ${sf__leads.converted_opportunity_id} = ${sf__opportunities.id} ;;", "    relationship: one_to_one", "  }", "  join: sf__leads_converted {", "    view_label: \"Converted Leads\"", "    sql_table_name: SEGMENT.SALESFORCE.LEADS ;;", "    sql_on: ${sf__leads_converted.id} = ${sf__leads.id} ;;", "    relationship: one_to_one", "    fields: [ sf__leads_converted.field_list* ]", "  }", "  join: sf__lead_became_suspect_date {", "    sql_on: ${sf__leads.id} = ${sf__lead_became_suspect_date.id} ;;", "    relationship: one_to_one", "  }", "}", "", "test: test_subscription_acv {", "  explore_source: sf__opportunities {", "    column: subscription_acv { field: opportunity_products.total_subscription_acv_no_is_won_filter }", "    column: subscription_nao_acv { field: opportunity_products.total_subscription_acv_nao_no_is_won_filter }", "    column: subscription_renewal_acv { field: opportunity_products.total_subscription_acv_renewal_no_is_won_filter }", "    column: subscription_debook { field: opportunity_products.total_subscription_acv_debook_no_is_won_filter }", "    column: subscription_bdev { field: opportunity_products.total_subscription_acv_bizdev_no_is_won_filter }", "    column: subscription_other { field: opportunity_products.total_subscription_acv_other_no_is_won_filter }", "    }", "  assert: subscription_acv_consistent {", "    expression:", "      round(${opportunity_products.total_subscription_acv_no_is_won_filter}, 2) =", "      round(${opportunity_products.total_subscription_acv_nao_no_is_won_filter}", "      + ${opportunity_products.total_subscription_acv_renewal_no_is_won_filter}", "      + ${opportunity_products.total_subscription_acv_debook_no_is_won_filter}", "      + ${opportunity_products.total_subscription_acv_bizdev_no_is_won_filter}", "      + ${opportunity_products.total_subscription_acv_other_no_is_won_filter}, 2) ;;", "  }", "}", ""], "explore_name": "sf__opportunities"}